/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DripversityPaymentSplitter,
  DripversityPaymentSplitterInterface,
} from "../DripversityPaymentSplitter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_payees",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_shares",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "PayeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "payee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526040516200125238038062001252833981016040819052620000269162000437565b818180518251146200009a5760405162461bcd60e51b815260206004820152603260248201527f5061796d656e7453706c69747465723a2070617965657320616e6420736861726044820152710cae640d8cadccee8d040dad2e6dac2e8c6d60731b60648201526084015b60405180910390fd5b6000825111620000ed5760405162461bcd60e51b815260206004820152601a60248201527f5061796d656e7453706c69747465723a206e6f20706179656573000000000000604482015260640162000091565b60005b825181101562000159576200014483828151811062000113576200011362000515565b602002602001015183838151811062000130576200013062000515565b60200260200101516200016960201b60201c565b80620001508162000541565b915050620000f0565b5050915160075550620005789050565b6001600160a01b038216620001d65760405162461bcd60e51b815260206004820152602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201526b7a65726f206164647265737360a01b606482015260840162000091565b60008111620002285760405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7453706c69747465723a20736861726573206172652030000000604482015260640162000091565b6001600160a01b03821660009081526002602052604090205415620002a45760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201526a206861732073686172657360a81b606482015260840162000091565b60048054600181019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0384169081179091556000908152600260205260408120829055546200030c9082906200055d565b600055604080516001600160a01b0384168152602081018390527f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac910160405180910390a15050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000396576200039662000355565b604052919050565b60006001600160401b03821115620003ba57620003ba62000355565b5060051b60200190565b600082601f830112620003d657600080fd5b81516020620003ef620003e9836200039e565b6200036b565b82815260059290921b840181019181810190868411156200040f57600080fd5b8286015b848110156200042c578051835291830191830162000413565b509695505050505050565b600080604083850312156200044b57600080fd5b82516001600160401b03808211156200046357600080fd5b818501915085601f8301126200047857600080fd5b815160206200048b620003e9836200039e565b82815260059290921b84018101918181019089841115620004ab57600080fd5b948201945b83861015620004e25785516001600160a01b0381168114620004d25760008081fd5b82529482019490820190620004b0565b91880151919650909350505080821115620004fc57600080fd5b506200050b85828601620003c4565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016200055657620005566200052b565b5060010190565b600082198211156200057357620005736200052b565b500190565b610cca80620005886000396000f3fe6080604052600436106100ab5760003560e01c80639852595c116100645780639852595c146101f2578063a3f8eace14610228578063c45ac05014610248578063ce7c2ac214610268578063d79779b21461029e578063e33b7de3146102d457600080fd5b806319165587146100f95780633a98ef391461011b578063406072a91461013f57806348b75044146101855780635be7fde8146101a55780638b83209b146101ba57600080fd5b366100f4577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77033604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b34801561010557600080fd5b50610119610114366004610a25565b6102e9565b005b34801561012757600080fd5b506000545b6040519081526020015b60405180910390f35b34801561014b57600080fd5b5061012c61015a366004610a42565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b34801561019157600080fd5b506101196101a0366004610a42565b6103eb565b3480156101b157600080fd5b5061011961050e565b3480156101c657600080fd5b506101da6101d5366004610a7b565b61053c565b6040516001600160a01b039091168152602001610136565b3480156101fe57600080fd5b5061012c61020d366004610a25565b6001600160a01b031660009081526003602052604090205490565b34801561023457600080fd5b5061012c610243366004610a25565b61056c565b34801561025457600080fd5b5061012c610263366004610a42565b6105b4565b34801561027457600080fd5b5061012c610283366004610a25565b6001600160a01b031660009081526002602052604090205490565b3480156102aa57600080fd5b5061012c6102b9366004610a25565b6001600160a01b031660009081526005602052604090205490565b3480156102e057600080fd5b5060015461012c565b6001600160a01b0381166000908152600260205260409020546103275760405162461bcd60e51b815260040161031e90610a94565b60405180910390fd5b60006103328261056c565b9050806000036103545760405162461bcd60e51b815260040161031e90610ada565b6001600160a01b0382166000908152600360205260408120805483929061037c908490610b3b565b9250508190555080600160008282546103959190610b3b565b909155506103a59050828261067f565b604080516001600160a01b0384168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a15050565b6001600160a01b0381166000908152600260205260409020546104205760405162461bcd60e51b815260040161031e90610a94565b600061042c83836105b4565b90508060000361044e5760405162461bcd60e51b815260040161031e90610ada565b6001600160a01b03808416600090815260066020908152604080832093861683529290529081208054839290610485908490610b3b565b90915550506001600160a01b038316600090815260056020526040812080548392906104b2908490610b3b565b909155506104c3905083838361079d565b604080516001600160a01b038481168252602082018490528516917f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a910160405180910390a2505050565b60005b600754811015610539576105276101148261053c565b8061053181610b53565b915050610511565b50565b60006004828154811061055157610551610b6c565b6000918252602090912001546001600160a01b031692915050565b60008061057860015490565b6105829047610b3b565b90506105ad83826105a8866001600160a01b031660009081526003602052604090205490565b6107ef565b9392505050565b6001600160a01b03821660009081526005602052604081205481906040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015610613573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106379190610b82565b6106419190610b3b565b6001600160a01b0380861660009081526006602090815260408083209388168352929052205490915061067790849083906107ef565b949350505050565b804710156106cf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161031e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461071c576040519150601f19603f3d011682016040523d82523d6000602084013e610721565b606091505b50509050806107985760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161031e565b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261079890849061082a565b600080546001600160a01b0385168252600260205260408220548391906108169086610b9b565b6108209190610bba565b6106779190610bdc565b600061087f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108fc9092919063ffffffff16565b805190915015610798578080602001905181019061089d9190610bf3565b6107985760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161031e565b60606106778484600085856001600160a01b0385163b61095e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161031e565b600080866001600160a01b0316858760405161097a9190610c45565b60006040518083038185875af1925050503d80600081146109b7576040519150601f19603f3d011682016040523d82523d6000602084013e6109bc565b606091505b50915091506109cc8282866109d7565b979650505050505050565b606083156109e65750816105ad565b8251156109f65782518084602001fd5b8160405162461bcd60e51b815260040161031e9190610c61565b6001600160a01b038116811461053957600080fd5b600060208284031215610a3757600080fd5b81356105ad81610a10565b60008060408385031215610a5557600080fd5b8235610a6081610a10565b91506020830135610a7081610a10565b809150509250929050565b600060208284031215610a8d57600080fd5b5035919050565b60208082526026908201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060408201526573686172657360d01b606082015260800190565b6020808252602b908201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060408201526a191d59481c185e5b595b9d60aa1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b4e57610b4e610b25565b500190565b600060018201610b6557610b65610b25565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610b9457600080fd5b5051919050565b6000816000190483118215151615610bb557610bb5610b25565b500290565b600082610bd757634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610bee57610bee610b25565b500390565b600060208284031215610c0557600080fd5b815180151581146105ad57600080fd5b60005b83811015610c30578181015183820152602001610c18565b83811115610c3f576000848401525b50505050565b60008251610c57818460208701610c15565b9190910192915050565b6020815260008251806020840152610c80816040850160208701610c15565b601f01601f1916919091016040019291505056fea26469706673582212207d62c7e8488783bf58aab202479f250390dbe712ff4be95526d2e66f34daa95964736f6c634300080d0033";

export class DripversityPaymentSplitter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _payees: string[],
    _shares: BigNumberish[],
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<DripversityPaymentSplitter> {
    return super.deploy(
      _payees,
      _shares,
      overrides || {}
    ) as Promise<DripversityPaymentSplitter>;
  }
  getDeployTransaction(
    _payees: string[],
    _shares: BigNumberish[],
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_payees, _shares, overrides || {});
  }
  attach(address: string): DripversityPaymentSplitter {
    return super.attach(address) as DripversityPaymentSplitter;
  }
  connect(signer: Signer): DripversityPaymentSplitter__factory {
    return super.connect(signer) as DripversityPaymentSplitter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DripversityPaymentSplitterInterface {
    return new utils.Interface(_abi) as DripversityPaymentSplitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DripversityPaymentSplitter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DripversityPaymentSplitter;
  }
}
